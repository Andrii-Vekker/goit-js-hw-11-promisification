{"version":3,"sources":["webpack:///./js/3hw.js"],"names":["makeTransaction","transaction","time","min","max","delay","Math","floor","random","Promise","resolve","reject","canProcess","setTimeout","id","logSuccess","console","log","logError","warn","amount","then","catch"],"mappings":"2JAKMA,EAAkB,SAACC,EAAaC,GACpC,IANiCC,EAAKC,EAMhCC,GAN2BF,EAMO,IANFC,EAMO,IALtCE,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMD,EAAM,GAAKA,IAMpD,OAAO,IAAIM,SAAQ,SAACC,EAASC,GAC1B,IAAMC,EAAaN,KAAKE,SAAW,GAChCK,YAAW,WAELD,EACFF,EAAQ,CAACT,EAAYa,GAAIT,IAEzBM,EAAOV,EAAYa,MAEpBT,OAKLU,EAAa,SAAC,GAAe,IAAdD,EAAc,KAAVZ,EAAU,KACjCc,QAAQC,IAAR,eAA2BH,EAA3B,iBAA8CZ,EAA9C,OAGIgB,EAAW,SAAAJ,GACfE,QAAQG,KAAR,gCAA6CL,EAA7C,8BAMKd,EAAgB,CAAEc,GAAI,GAAIM,OAAQ,MACjCC,KAAKN,GACLO,MAAMJ,GAEPlB,EAAgB,CAAEc,GAAI,GAAIM,OAAQ,MACjCC,KAAKN,GACLO,MAAMJ,GAEPlB,EAAgB,CAAEc,GAAI,GAAIM,OAAQ,KACjCC,KAAKN,GACLO,MAAMJ,GAEPlB,EAAgB,CAAEc,GAAI,GAAIM,OAAQ,MACjCC,KAAKN,GACLO,MAAMJ,K","file":"main.e73bdeedc62d6635d106.js","sourcesContent":["const randomIntegerFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\n\r\nconst makeTransaction = (transaction, time) => {\r\n  const delay = randomIntegerFromInterval(200, 500);\r\n  return new Promise((resolve, reject) => {\r\n     const canProcess = Math.random() > 0.3;\r\n        setTimeout(() => {\r\n         \r\n          if (canProcess) {\r\n            resolve([transaction.id, delay]);\r\n          } else {\r\n            reject(transaction.id);\r\n          }\r\n        }, delay);\r\n  })\r\n}\r\n\r\n\r\nconst logSuccess = ([id, time]) => {\r\n  console.log(`Transaction ${id} processed in ${time}ms`);\r\n};\r\n\r\nconst logError = id => {\r\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n};\r\n\r\n        /*\r\n        * Должно работать так\r\n        */\r\n       makeTransaction({ id: 70, amount: 150 })\r\n       .then(logSuccess)\r\n       .catch(logError);\r\n       \r\n       makeTransaction({ id: 71, amount: 230 })\r\n       .then(logSuccess)\r\n       .catch(logError);\r\n       \r\n       makeTransaction({ id: 72, amount: 75 })\r\n       .then(logSuccess)\r\n       .catch(logError);\r\n       \r\n       makeTransaction({ id: 73, amount: 100 })\r\n       .then(logSuccess)\r\n       .catch(logError);\r\n       \r\n  \r\n        \r\n       /*\r\n        * Работает так\r\n        */\r\n             // makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\r\n             // makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\r\n             // makeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\r\n             // makeTransaction({ id: 73, amount: 100 }, logSuccess, logError);"],"sourceRoot":""}